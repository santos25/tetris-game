{"version":3,"sources":["audio/move.mp3","audio/soundgameover.mp3","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledActionButton.js","components/ActionButton.js","gamehelper.js","hooks/useStage.js","components/styles/StyledTetris.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","audio/soundtetris.mp3"],"names":["module","exports","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randomIndex","Math","floor","random","length","React","memo","StyledStage","width","height","Stage","stage","map","row","i","cell","key","StyledDisplay","gameover","Display","text","StyledButtom","button","StartButton","onClick","startGame","children","StyledActionButton","ActionButton","move","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prev","newStage","forEach","value","collided","reduce","acum","findIndex","unshift","push","sweepRows","WrappedTetris","StyleTittle","StyledTetris","StyledControl","StyledLeftRight","StyledDown","StyledWrapperActions","StyledStartButton","soundStartGame","Howl","src","soundtetris","loop","soundMove","soundmove","soundGameOver","soundgameover","Tetris","droptime","setDropTime","gameOver","setGameOver","setPlayer","rotate","dir","rotatedTetro","_","index","col","reverse","useCallback","WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","rows","setRows","score","setScore","level","setLevel","linePoints","calculateScore","useGameStatus","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","drop","movePlayer","console","log","stop","play","dropPlayer","playSound","Howler","rol","tabIndex","onKeyUp","e","keyCode","moveUp","onKeyDown","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b60f29db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/move.4ae628b5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/soundgameover.4429a2c2.mp3\";","import styled from 'styled-components'\r\n\r\nexport const StyledCell = styled.div`\r\nwidth: auto;\r\nbackground: rgba(${props => props.color}, 0.8);\r\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\nborder-bottom-color: rgba(${props => props.color}, 0.1);\r\nborder-right-color: rgba(${props => props.color}, 1);\r\nborder-top-color: rgba(${props => props.color}, 1);\r\nborder-left-color: rgba(${props => props.color}, 0.3);\r\n    \r\n`","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0' },\r\n    I: {\r\n        shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0]\r\n        ],\r\n        color: '80, 227, 230',\r\n    },\r\n    J: {\r\n        shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0]\r\n        ],\r\n        color: '36, 95, 223',\r\n    },\r\n    L: {\r\n        shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L']\r\n        ],\r\n        color: '223, 173, 36',\r\n    },\r\n    O: {\r\n        shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O'],\r\n        ],\r\n        color: '223, 217, 36',\r\n    },\r\n    S: {\r\n        shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '48, 211, 56',\r\n    },\r\n    T: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0]\r\n        ],\r\n        color: '132, 61, 198',\r\n    },\r\n    Z: {\r\n        shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '227, 78, 78',\r\n    },\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randomIndex = Math.floor(Math.random() * tetrominos.length )\r\n    const randomTetro = tetrominos[randomIndex];\r\n    \r\n    return TETROMINOS[randomTetro] \r\n}\r\n","import React from 'react'\r\nimport { StyledCell } from './styles/StyledCell'\r\nimport { TETROMINOS } from '../tetrominos'\r\n\r\nconst Cell = ({ type }) => {\r\n    return (\r\n        <StyledCell type={type} color={TETROMINOS[type].color}>\r\n            {/* {console.log(\"render Cell\" , type)} */}\r\n        </StyledCell>\r\n    )\r\n}\r\n\r\nexport default React.memo(Cell)\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(${props => props.width}, 1fr);\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(17vw / ${props => props.width})\r\n      );\r\n    grid-gap: 1px;\r\n    width : 100%;\r\n    max-width: 48vw;\r\n    background-color: #030202 ;\r\n    -webkit-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    -moz-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    \r\n    @media screen and (max-width: 700px) {\r\n      grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(50vw / ${props => props.width})\r\n      );\r\n  }\r\n`","import React from 'react'\r\n\r\nimport Cell from './Cell'\r\nimport {StyledStage} from './styles/StyledStage'\r\nconst Stage = ({ stage}) => {\r\n    return (\r\n        <StyledStage width={stage[0].length} height={stage.length}>\r\n            {stage.map((row , i) =>  row.map( (cell,i) => <Cell key={i} type={cell[0]} />))}\r\n        </StyledStage>\r\n    )\r\n}\r\n\r\nexport default Stage\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDisplay = styled.div`\r\n    padding: 8px;\r\n    border-radius: 25px;\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    background-color:  #0E0000;\r\n    -webkit-box-shadow: 2px 2px px 4px rgba(227,11,11,1);\r\n    -moz-box-shadow: 2px 2px 4px 4px rgba(227,11,11,1);\r\n    box-shadow: 2px 3px 4px 2px rgba(227,11,11,1);\r\n    color : ${props => props.gameover ? 'red' : 'white'};\r\n\r\n    \r\n    @media screen and (max-width: 700px) {\r\n        font-size: 10px;\r\n        padding: 3px;\r\n        border-radius: 10px;\r\n        margin-bottom: 20px;\r\n        background-color:  #0E0000;\r\n        -webkit-box-shadow: 2px 2px px 4px rgba(227,11,11,1);\r\n        -moz-box-shadow: 2px 2px 4px 4px rgba(227,11,11,1);\r\n        box-shadow: 2px 3px 4px 2px rgba(227,11,11,1);\r\n        color : ${props => props.gameover ? 'red' : 'white'}\r\n        font-size: 5px;\r\n    }\r\n`","import React from 'react'\r\n\r\nimport { StyledDisplay} from './styles/StyledDisplay'\r\nconst Display = ({gameover , text }) => {\r\n    return (\r\n        <StyledDisplay gameover={gameover}>\r\n            {text}\r\n        </StyledDisplay>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledButtom = styled.button`\r\npadding: 8px;\r\nborder-radius: 25px;\r\nwidth : 20%;\r\ncolor:white;\r\nmargin: 0 10px 0 10px;\r\nbackground-color:  #0E0000;\r\n-webkit-box-shadow: 2px 2px px 4px rgba(227,11,11,1);\r\n-moz-box-shadow: 2px 2px 4px 4px rgba(227,11,11,1);\r\nbox-shadow: 2px 3px 4px 2px rgba(227,11,11,1);\r\n`","import React from 'react'\r\nimport { StyledButtom } from './styles/StyledStartButton'\r\n\r\nconst StartButton = ( props) => {\r\n    return (\r\n        <StyledButtom onClick={props.startGame} >\r\n            {props.children}\r\n        </StyledButtom>\r\n    )\r\n}\r\n\r\nexport default StartButton\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledActionButton = styled.button`\r\npadding: 8px;\r\nborder-radius: 25px;\r\nwidth : 20%;\r\ncolor:white;\r\nmargin: 0 10px 0 10px;\r\nbackground-color:  #0E0000;\r\n-webkit-box-shadow: 2px 2px px 4px rgba(227,11,11,1);\r\n-moz-box-shadow: 2px 2px 4px 4px rgba(227,11,11,1);\r\nbox-shadow: 2px 3px 4px 2px rgba(227,11,11,1);\r\n\r\n@media screen and (max-width: 700px) {\r\n    text-align: center;\r\n    \r\n}\r\n`","import React from 'react'\r\n\r\nimport { StyledActionButton } from './styles/StyledActionButton'\r\n\r\nconst ActionButton = (props) => {\r\n    return (\r\n        <StyledActionButton onClick={props.move}>\r\n            {props.children}\r\n        </StyledActionButton>\r\n    )\r\n}\r\n\r\nexport default ActionButton\r\n","const HEIGHT = 20;\r\nexport const WIDTH = 12;\r\n\r\nexport const createStage = () => {\r\n\r\n    const stage = Array.from(Array(HEIGHT), () => Array(WIDTH).fill([0, 'clear']));\r\n    return stage\r\n}\r\n\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n\r\n    for (let row = 0; row < player.tetromino.length; row++) {\r\n        for (let cell = 0; cell < player.tetromino[row].length; cell++) {\r\n            // console.log({ row });\r\n            // console.log({ cell });\r\n            // console.log('pos y next', (row + player.pos.y + moveY));\r\n            // console.log('pos x next ', (cell + player.pos.x + moveX));\r\n         \r\n        \r\n            // console.log(stage[player.pos.y][cell + player.pos.x + moveX]);\r\n            // console.log(stage[row + player.pos.y + moveY][cell + player.pos.x + moveX][1] !== 'clear');\r\n            if (player.tetromino[row][cell] !== 0) {\r\n                if (\r\n                    //check we are inside of the height\r\n                    !stage[row + player.pos.y + moveY] ||\r\n\r\n                    //check we are inside of the width\r\n                    !stage[row + player.pos.y + moveY][cell + player.pos.x + moveX] ||\r\n\r\n                    //cheack the cell is not collised\r\n                    stage[row + player.pos.y + moveY][cell + player.pos.x + moveX][1] !== 'clear'\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { useState, useEffect } from 'react'\r\n\r\nimport { createStage } from '../gamehelper';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage())\r\n    const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0);\r\n        //first flush the stage\r\n        // console.log(\"Effect Stage\", player);\r\n        const sweepRows = newStage =>\r\n            newStage.reduce((acum, row) => {\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1);\r\n                    acum.unshift(new Array(newStage[0].length).fill([0, 'clear']))\r\n                    return acum;\r\n                }\r\n\r\n                acum.push(row);\r\n                return acum;\r\n            }, []);\r\n\r\n\r\n\r\n        const updateStage = (prev) => {\r\n            const newStage = prev.map((row, y) => row.map((cell, x) => cell[1] === 'clear' ? [0, 'clear'] : cell));\r\n\r\n            //draw the tretromino\r\n            player.tetromino.forEach((row, y) => {\r\n                row.forEach((value, x) => {\r\n                    if (value !== 0) {\r\n                        // console.log('y', player.pos.y);\r\n                        // console.log('x' , player.pos.x);\r\n                        // console.log('xx' , player.pos.x + x);\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collided ? 'merged' : 'clear'}`]\r\n                    }\r\n\r\n                })\r\n            })\r\n\r\n            if (player.collided) {\r\n                resetPlayer()\r\n                // console.log('Collided');\r\n                return sweepRows(newStage);\r\n            }\r\n\r\n            return newStage;\r\n        }\r\n\r\n        setStage(prev => updateStage(prev))\r\n    }, [player, resetPlayer])\r\n\r\n    return [stage, setStage, rowsCleared];\r\n}","import styled from 'styled-components'\r\n\r\n\r\nexport const WrappedTetris = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n`\r\n\r\nexport const StyleTittle = styled.div`\r\n    display flex;\r\n    width : 100%;\r\n    justify-content: center;\r\n    margin : 0 auto;\r\n\r\n    @media screen and (max-width: 700px) {\r\n        margin : 30px 0 0 0;\r\n\r\n    }\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n    display : flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    max-width: 45%;\r\n    padding: 20px 40px ;\r\n    justify-content: center;\r\n    border-radius : 50px;\r\n    margin : 0 auto;\r\n    background-color: #030202;\r\n    \r\n    -webkit-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    -moz-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n\r\n\r\n    @media screen and (max-width: 700px) {\r\n        display : flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-width: 75%;\r\n        padding: 20px 15px ;\r\n        justify-content: center;\r\n        border-radius : 10px;\r\n        margin : 0 30px 0 20px;\r\n        background-color: #030202;\r\n        \r\n        -webkit-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n        -moz-box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n        box-shadow: -1px 2px 8px 4px rgba(227,11,11,1);\r\n    }\r\n      \r\n`\r\nexport const StyledDisplay = styled.div`\r\n    display : flex;\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    margin : 0 auto;\r\n    \r\n    aside {\r\n        margin : 0 25px;\r\n    }\r\n\r\n    @media screen and (max-width: 700px) {\r\n        display : flex;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        margin : 0 auto;\r\n\r\n        aside {\r\n            margin : 0;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledControl = styled.div`\r\n    display : flex;\r\n    width: 50%;\r\n    flex-direction: column;\r\n    margin-top: 10px;\r\n\r\n    @media screen and (max-width: 700px) {\r\n        width: 55%;\r\n    }\r\n`\r\n\r\nexport const StyledLeftRight = styled.div`\r\n    display : flex;\r\n    padding : 0 0 10px 0;\r\n    justify-content: center;\r\n`\r\n\r\nexport const StyledDown = styled.div`\r\n    display : flex;\r\n    justify-content: center;\r\n\r\n`\r\nexport const StyledWrapperActions = styled.div`\r\n    display : flex;\r\n    width: 100%;\r\n`\r\nexport const StyledStartButton = styled.div`\r\n    width: 55%;\r\n    margin-top: 10px;\r\n`","import React, { useState } from 'react'\r\nimport { Howl, Howler } from 'howler';\r\n\r\n//audios\r\nimport soundtetris from '../audio/soundtetris.mp3'\r\nimport soundmove from '../audio/move.mp3'\r\nimport soundgameover from '../audio/soundgameover.mp3'\r\n\r\n//components\r\nimport Stage from './Stage'\r\nimport Display from './Display'\r\nimport StartButton from './StartButton'\r\nimport ActionButton from './ActionButton'\r\n\r\n//helpers\r\nimport { createStage, checkCollision } from '../gamehelper';\r\n\r\n//custom hooks\r\nimport { usePlayer } from '../hooks/usePlayer'\r\nimport { useStage } from '../hooks/useStage'\r\nimport { useInterval } from '../hooks/useInterval'\r\nimport { useGameStatus } from '../hooks/useGameStatus'\r\n\r\n//styles\r\nimport {\r\n    StyledTetris, StyledDisplay, StyledControl,\r\n    StyledDown, StyledLeftRight, StyledWrapperActions,\r\n    StyledStartButton, WrappedTetris,\r\n    StyleTittle\r\n} from './styles/StyledTetris'\r\n\r\nlet soundStartGame = new Howl({\r\n    src: [soundtetris],\r\n    loop: true,\r\n});\r\n\r\nvar soundMove = new Howl({\r\n    src: [soundmove],\r\n\r\n});\r\n\r\nvar soundGameOver = new Howl({\r\n    src: [soundgameover],\r\n});\r\n\r\nconst Tetris = () => {\r\n    const [droptime, setDropTime] = useState(null)\r\n    const [gameOver, setGameOver] = useState(false)\r\n\r\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\r\n    const [rows, setRows, score, setScore, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n    const startGame = () => {\r\n        console.log(\"start game\");\r\n        playSound(soundtetris)\r\n        setStage(createStage());\r\n        resetPlayer()\r\n        setGameOver(false);\r\n        setDropTime(700)\r\n        setLevel(0)\r\n        setRows(0)\r\n        setScore(0);\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop();\r\n    }, droptime)\r\n\r\n    const movePlayer = (dir) => {\r\n        console.log(checkCollision(player, stage, { x: dir, y: 0 }));\r\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n            updatePlayerPos({ x: dir, y: 0 })\r\n        }\r\n    }\r\n\r\n    const moveUp = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 40) {\r\n                setDropTime(1000 / (level + 1) + 200)\r\n            }\r\n        }\r\n    }\r\n\r\n    // console.log('pos ', player.pos.x);\r\n    const move = ({ keyCode }) => {\r\n        console.log(keyCode);\r\n\r\n        if (!gameOver) {\r\n            if (keyCode === 37) {\r\n                movePlayer(-1)\r\n            } else if (keyCode === 39) {\r\n                movePlayer(1)\r\n            } else if (keyCode === 40) {\r\n                dropPlayer()\r\n            } else if (keyCode === 38) {\r\n                playerRotate(stage, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const drop = () => {\r\n\r\n        if (rows > (level + 1) * 10) {\r\n            setLevel(prev => prev + 1);\r\n            setDropTime(1000 / (level + 1) + 200);\r\n        }\r\n\r\n        // console.log(checkCollision(player, stage, { x: 0, y: 1 }));\r\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n            updatePlayerPos({ x: 0, y: 1, collided: false })\r\n        } else {\r\n            if (player.pos.y < 1) {\r\n                // console.log(\"Gam\");\r\n                soundStartGame.stop()\r\n                soundGameOver.play()\r\n                setGameOver(true);\r\n                setDropTime(null)\r\n            }\r\n            updatePlayerPos({ x: 0, y: 0, collided: true })\r\n        }\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        // setDropTime(null)\r\n        drop();\r\n    }\r\n\r\n    const moveRight = () => {\r\n\r\n        if (!gameOver) {\r\n            soundMove.play();\r\n            movePlayer(1)\r\n        }\r\n    }\r\n\r\n    const moveLeft = () => {\r\n        // console.log(\"move left\");\r\n        if (!gameOver) {\r\n            soundMove.play();\r\n            movePlayer(-1)\r\n        }\r\n    }\r\n\r\n    const moveDown = () => {\r\n        dropPlayer()\r\n    }\r\n\r\n    const moveUpClick = () => {\r\n        playerRotate(stage, 1)\r\n    }\r\n\r\n    const playSound = (src) => {\r\n        console.log(src);\r\n\r\n        Howler.stop();\r\n        soundStartGame.play();\r\n\r\n        // if (idPlayTetris === null) {\r\n        //     console.log(\"no sound\");\r\n        //     setIdPlayTetris(sound.play());\r\n        // } else {\r\n        //     console.log(\"sound \", idPlayTetris);\r\n        //     Howler.stop(idPlayTetris);\r\n        //     setIdPlayTetris(sound.play());\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <WrappedTetris rol=\"button\" tabIndex=\"0\" onKeyUp={(e) => moveUp(e)} onKeyDown={(e) => move(e)}>\r\n            <StyleTittle>\r\n                <h1>TETRIS </h1>\r\n            </StyleTittle>\r\n            <StyledTetris>\r\n                <StyledDisplay >\r\n                    <Stage stage={stage} />\r\n                    <aside>\r\n                        {gameOver ?\r\n                            (<div>\r\n                                <Display gameover={gameOver} text=\"Juego Terminado\" />\r\n                                <Display text={`Puntuación : ${score}`} />\r\n                                <Display text={`Total Filas : ${rows}`} />\r\n                                <Display text={`Nivel : ${level}`} />\r\n                            </div>)\r\n                            : (\r\n                                <div>\r\n                                    <Display text={`Puntuación : ${score}`} />\r\n                                    <Display text={`Total Filas : ${rows}`} />\r\n                                    <Display text={`Nivel : ${level}`} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </aside>\r\n                </StyledDisplay>\r\n                <StyledWrapperActions>\r\n                    <StyledControl>\r\n                        <StyledLeftRight>\r\n                            <ActionButton move={moveLeft}>\r\n                                <i className=\"fas fa-arrow-left\"></i>\r\n                            </ActionButton>\r\n                            <ActionButton move={moveRight}>\r\n                                <i className=\"fas fa-arrow-right\"></i>\r\n                            </ActionButton>\r\n                        </StyledLeftRight>\r\n                        <StyledDown>\r\n                            <ActionButton move={moveDown}>\r\n                                <i className=\"fas fa-arrow-down\"></i>\r\n                            </ActionButton>\r\n                            <ActionButton move={moveUpClick}>\r\n                                <i className=\"fas fa-sync-alt\"></i>\r\n                            </ActionButton>\r\n                        </StyledDown>\r\n                    </StyledControl>\r\n                    <StyledStartButton>\r\n                        <StartButton startGame={startGame} >\r\n                            <i className=\"far fa-play-circle\"></i>\r\n                        </StartButton>\r\n                    </StyledStartButton>\r\n                </StyledWrapperActions>\r\n            </StyledTetris>\r\n        </WrappedTetris>\r\n    )\r\n}\r\n\r\nexport default Tetris\r\n","import { useState, useCallback } from 'react'\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\n\r\nimport { WIDTH, checkCollision } from '../gamehelper'\r\n\r\nexport const usePlayer = () => {\r\n    const [player, setPlayer] = useState({\r\n        pos: { x: 0, y: 0 },\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false\r\n    })\r\n\r\n    // console.log('render Player Hooks');\r\n\r\n    const rotate = (tetromino, dir) => {\r\n        //make rows to become columns\r\n        // console.log(tetromino);\r\n        const rotatedTetro = tetromino.map((_, index) =>\r\n            tetromino.map(col => col[index]),\r\n        );\r\n\r\n        // console.log(rotatedTetro);\r\n\r\n        if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n\r\n        return rotatedTetro.reverse();\r\n    }\r\n\r\n    const rotatePlayer = (stage, dir) => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n        // console.log(clonedPlayer.tetromino);\r\n\r\n        const pos = clonedPlayer.pos.x;\r\n        let offset = 1;\r\n        while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n            clonedPlayer.pos.x += offset;\r\n            offset = -(offset + (offset > 0 ? 1 : -1));\r\n            if (offset > clonedPlayer.tetromino[0].length) {\r\n                rotate(clonedPlayer.tetromino, -dir);\r\n                clonedPlayer.pos.x = pos;\r\n                return;\r\n            }\r\n        }\r\n\r\n        setPlayer(clonedPlayer);\r\n    }\r\n\r\n    const updatePlayerPos = ({ x, y, collided }) => {\r\n        // console.log('position ', player.pos.x);\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: { x: (player.pos.x + x), y: (prev.pos.y + y) },\r\n            collided\r\n        }));\r\n    }\r\n\r\n    const resetPlayer = useCallback(() => {\r\n        // console.log(\"reset Player\");\r\n        setPlayer({\r\n            pos: { x: WIDTH / 2 - 2, y: 0 },\r\n            tetromino: randomTetromino().shape,\r\n            collided: false\r\n        })\r\n    }, [])\r\n\r\n    return [player, updatePlayerPos, resetPlayer, rotatePlayer]\r\n}","import { useState, useEffect, useCallback } from 'react'\r\n\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n    const [rows, setRows] = useState(0)\r\n    const [score, setScore] = useState(0)\r\n    const [level, setLevel] = useState(0)\r\n\r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calculateScore = useCallback(() => {\r\n        // console.log({rowsCleared});\r\n        if (rowsCleared > 0) {\r\n            // console.log({ score })\r\n            // console.log({ rowsCleared })\r\n            // console.log(linePoints[rowsCleared - 1]);\r\n            // console.log(level);\r\n\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\r\n            setRows(prev => prev + rowsCleared)\r\n        }\r\n    }, [rowsCleared, linePoints, level])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"UseGame Effect\");\r\n        calculateScore();\r\n    }, [calculateScore, rowsCleared])\r\n\r\n    return [rows, setRows, score, setScore, level, setLevel]\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport './App.css';\nimport Tetris from './components/Tetris';\n\nfunction App() {\n  return (\n      <Tetris />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/soundtetris.8238b028.mp3\";"],"sourceRoot":""}